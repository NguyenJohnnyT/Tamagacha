{"version":3,"sources":["components/Header/Menu.js","utils/API.js","utils/localStorage.js","utils/auth.js","components/Header/dropDownCard.js","components/Header/MenuDrop.js","components/Header/Header.js","assets/tama1.png","assets/tama2.png","assets/tama3.png","assets/tama4.png","assets/tama5.png","components/Homepage/Homepage.js","components/Profile/StatsDropdown.js","assets/match-game.png","assets/ttt-game.png","components/TTT2/Ttt2.js","assets/slip.mp3","components/Matching/Card.js","components/Matching/Matching.js","components/Minigame/Minigamepage.js","components/Profile/Profile.js","components/Tamadex/Tamadex.js","assets/pop.mp3","components/gacha_page/gacha.js","components/MyTama/MyTama.js","App.js","index.js"],"names":["Button","onClick","distance","color","createUser","userData","fetch","method","headers","body","JSON","stringify","loginUser","getUser","u_id","token","authorization","getTama","t_id","console","log","getUniqueTama","ut_id","updateTama","tamaData","newTama","user_id","tama_id","Math","floor","random","setCurrentTama","id","localStorage","setItem","err","error","getCurrentTama","currentTama","getItem","getUserId","decode","this","getToken","isTokenExpired","exp","Date","now","removeItem","idToken","setUserId","window","location","assign","reload","DropDownCard","data","setOpen","handlePageChange","sweetAlertLogin","a","Swal","fire","title","html","focusConfirm","showCancelButton","confirmButtonText","preConfirm","document","getElementById","value","allowOutsideClick","sweetRespond","userInput","isConfirmed","icon","username","password","response","ok","Error","json","Auth","login","isDismissed","sweetAlertSignUp","timer","email","test","String","toLowerCase","length","className","style","backgroundColor","position","right","width","paddingTop","map","item","i","logout","renderSweetAlert","menuData","MenuDrop","props","React","useState","open","drop","useRef","menuItem","setMenuItem","useEffect","setMenuItemFunction","loggedIn","handleClick","e","addEventListener","removeEventListener","ref","margin","Menu","Header","Homepage","src","tama1","alt","tama2","tama3","tama4","tama5","Stats","userTama","happiness","emoji","quote","baseQuote","hungerQuote","boredQuote","dyingQuote","status","hunger","round","age","bladder","date_created","split","playerOne","player1","playerTwo","player2","Ttt2","userGameStatus","Array","fill","boxes","setBoxes","winner","setWinner","setUserWon","gameOver","setGameOver","backToProfile","setBackToProfile","turn","setTurn","winningComb","setComputerMove","text","imageUrl","imageWidth","imageHeight","imageAlt","squares","combos","across","down","diagonal","combo","forEach","pattern","setTimeout","prevState","stillOpen","push","randomIndex","Cell","num","Card","index","name","image","flip","handleOnClick","setUserPick","images2","sound","Howl","music","volume","Matching","randomImageLink","setRandomImageLink","userPick","move","setMove","score","setScore","randomCard","checkBothCards","checkGameOver","sort","prev","play","index1","index2","class","MinigamePage","page","setPage","buttonClick","setButtonClick","userWin","setUserWin","currentTamaData","setCurrentTamaDate","getCurrentUserTama","updateUserTama","renderPageFunction","tamaMatch","tamaTTT","Profile","stat","setStat","tama","setTama","pageToRender","setPageToRender","getTamaStats","getUserTamaStats","feedTama","newHunger","poopTama","newBladder","pictures","href","Tamadex","pop","Gacha","MyTama","tamasOwned","setTamaOwned","getUserData","user","tamas_owned","gachaPull","is_alive","App","checkIfUserHaveTama","renderPage","ReactDOM","render"],"mappings":"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","file":"static/js/main.e7419439.chunk.js","sourcesContent":["import React from \"react\";\nimport Hamburger from 'hamburger-react';\nimport './header.css';\n\nconst Button = ({ onClick }) => (\n    <button onClick={onClick}>\n        <Hamburger distance=\"md\" color=\"lightyellow\" >\n        </Hamburger>\n    </button>\n\n\n);\n\nexport default Button;\n","export const createUser = (userData) => {\n  return fetch('/api/user/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\nexport const loginUser = (userData) => {\n  return fetch('/api/user/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\nexport const getMe = (token) => {\n  return fetch('/api/usertama/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nexport const getUser = (u_id, token) => {\n  return fetch(`/api/usertama/${u_id}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nexport const getTama = (u_id, t_id, token) => {\n  console.log(`u_id ${u_id}, t_id ${t_id}, token ${token}`)\n  return fetch(`/api/usertama/${u_id}/${t_id}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nexport const getUniqueTama = (ut_id, token) => {\n  console.log(`ut_id ${ut_id}, token ${token}`)\n  return fetch(`/api/usertama/uniquetama/${ut_id}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nexport const updateTama = (tamaData, token, ut_id) => {\n  //tamaData should be the userTama object that the user owns\n  //ut_id, tamaData (happiness change), token Auth.getToken(0)\n  console.log('tamaData to PUT', tamaData)\n  return fetch(`/api/usertama/uniquetama/${ut_id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(tamaData),\n  });\n};\n\nexport const newTama = (user_id, token) => { //! FOR GACHA PURPOSES\n  const tama_id = Math.floor(Math.random()*5+1)\n  return fetch(`/api/usertama/${user_id}/${tama_id}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    }\n  })\n}\n\n// export const getAllUser = (u_id, token) => {\n//   return fetch(`/api/user`);\n// };\n","export const setCurrentTama = (id) => {\n  try {\n    localStorage.setItem('current_userTama_id', id)\n  } catch (err) {\n    console.log('No usertama with this id!');\n    console.error(err);\n  }\n}\n\nexport const getCurrentTama = () => {\n  const currentTama = localStorage.getItem('current_userTama_id')\n  ? localStorage.getItem('current_userTama_id')\n  : null;\n\n  if (!currentTama) {\n    console.log('No usertama stored!')\n    return\n  } else {return currentTama}\n}\n\nexport const setUserId = (id) => {\n  try {\n    localStorage.setItem('user_id', id)\n  } catch (err) {\n    console.log('No user with this id!')\n    console.error(err);\n  }\n}\n\nexport const getUserId = () => {\n  const user_id = localStorage.getItem('user_id')\n  ? localStorage.getItem('user_id')\n  : null;\n\n  if (!user_id) {\n    console.log('Something went wrong! Not a valid user_id (client/utils)')\n    return\n  } else {return user_id}\n}","import decode from 'jwt-decode';\nimport { setUserId } from './localStorage'\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    const decoded = decode(token);\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken, user_id) {\n    setUserId(user_id); //* set localstorage user_id key to value of user_id in parameter *//\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('user_id');\n    localStorage.removeItem('current_userTama_id')\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();","import React from \"react\";\n//SweetAlert\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n// const MySwal = withReactContent(Swal)\nimport { loginUser, createUser } from \"../../utils/API\";\nimport Auth from '../../utils/auth'\n\nconst liCls =\n  \"p-3 text-gray-700 hover:text-white hover:bg-indigo-700 cursor-pointer\";\n\n\n  function DropDownCard({ data = [], setOpen, handlePageChange}) {\n\n    // const getAllUserEmail = async (userInputEmail) => {\n    //   let response = await getAllUser()\n    //   let data = await response.json()\n    //   console.log('data-----All User data-------->', data)\n    //   for(var i = 0; i < data.length; i++) {\n    //     if(userInputEmail === data[i].email) {\n    //       return true;\n    //     }\n    //   }\n    //   return false;\n    // }\n    const validateEmail = (email) => {\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(String(email).toLowerCase());\n  }\n\n    const sweetAlertLogin = async () => {\n      const sweetRespond = await Swal.fire({\n        // const a = await Swal.fire({\n        title: 'Login',\n        html:\n          '<input placeholder=\"Username\" id=\"swal-input1\" class=\"swal2-input\">' +\n          '<input placeholder=\"Password\" type=\"password\" id=\"swal-input2\" class=\"swal2-input\">',\n        focusConfirm: false,\n        showCancelButton: true,\n        confirmButtonText: `Login`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value,\n            document.getElementById('swal-input2').value\n          ]\n        },\n        allowOutsideClick: false,\n      })\n\n      var userInput = sweetRespond.value\n\n      // Sign in button clicked\n      if (sweetRespond.isConfirmed) {\n\n        //if either username or password are empty\n        if(userInput[0] === '' || userInput[1] === '') {\n          // Return SweetAlert Error\n          Swal.fire({\n            icon: 'error',\n            title: `Invalid Input`,\n\n          })\n        } else {\n          //We got username and password\n          // console.log('userinput Array--->', userInput)\n          //Need to check username and password from database..........\n          try { //!LOGIN TRY CATCH\n            const response = await loginUser(\n              { username: userInput[0], password: userInput[1] }\n            )\n            if (!response.ok) {\n              throw new Error('Something went wrong!')\n            };\n\n            const {token, userData } = await response.json();\n            // console.log('response.json() userData login', userData);\n            Auth.login(token, userData.id);\n            console.log('before sweetalert welcone back')\n            await Swal.fire({\n              icon: 'success',\n              title: `Welcome Back ${userInput[0]}`,\n              // timer: 1500\n            })\n            console.log('after sweetalert welcone back')\n            handlePageChange('My Tama')\n          } catch (err) {\n            console.error(err)\n            Swal.fire({\n              icon: 'error',\n              title: `Something wrong with logging in`,\n              // timer: 1500\n            })\n          }\n        }\n      }\n\n      //If cancel button click\n      if(sweetRespond.isDismissed) {\n        // console.log('cancel button click')\n      }\n    }\n\n    const sweetAlertSignUp = async () => {\n      const sweetRespond = await Swal.fire({\n        title: 'Sign Up',\n        html:\n          '<input placeholder=\"Username\" type=\"user\" id=\"swal-input1\" class=\"swal2-input\">' +\n          '<input placeholder=\"Email\" type=\"email\" id=\"swal-input2\" class=\"swal2-input\">' +\n          '<input placeholder=\"Password\" type=\"password\" id=\"swal-input3\" class=\"swal2-input\">',\n        focusConfirm: false,\n        showCancelButton: true,\n        confirmButtonText: `Sign Up`,\n        preConfirm: () => {\n          return [\n            document.getElementById('swal-input1').value,\n            document.getElementById('swal-input2').value,\n            document.getElementById('swal-input3').value,\n          ]\n        },\n        allowOutsideClick: false,\n      })\n\n      var userInput = sweetRespond.value\n\n      // Sign in button clicked\n      if (sweetRespond.isConfirmed) {\n\n        //if username/email/password are empty\n        if(userInput[0] === '' || userInput[1] === '' || userInput[2] === '') {\n          // Return SweetAlert - All Fields are Required!\n          await Swal.fire({\n            icon: 'error',\n            title: `All Fields are Required!`,\n            timer: 1500\n          })\n          //if invalid email\n        } else if (!validateEmail(userInput[1])) {\n          await Swal.fire({\n            icon: 'error',\n            title: `Invalid Email!`,\n            timer: 1500\n          })\n          //if password is less then 6 characters\n        } else if (userInput[2].length < 6) {\n          await Swal.fire({\n            icon: 'error',\n            title: `Password must be at least 6 characters!`,\n            timer: 1500\n          })\n        } \n        // else if(await getAllUserEmail(userInput[1])) {\n        //   console.log('hahahahaha', await getAllUserEmail(userInput[1]))\n        //   await Swal.fire({\n        //     icon: 'error',\n        //     title: `The Email address is already in use!`,\n        //     timer: 1500\n        //   })\n        // }\n        else {\n          //We got username and password\n          console.log('userinput Array--->', userInput)\n          //Need to check username and password from database..........\n          try { //!SIGNUP TRY CATCH\n            const response = await createUser(\n              { username: userInput[0], email: userInput[1], password: userInput[2]}\n            );\n\n            if (!response.ok) {\n              throw new Error(\"Something went wrong!\");\n            }\n\n            const { token, userData } = await response.json();\n            // console.log('response.json() userData signup', userData)\n            Auth.login(token, userData.id);\n\n            await Swal.fire({\n              icon: 'success',\n              title: `${userInput[0]} Sign Up `,\n              // timer: 1500\n            })\n          } catch (err) {\n            console.error(err)\n            await Swal.fire({\n              icon: 'error',\n              title: `Something wrong with logging in`,\n              // timer: 1500\n            })\n          }\n\n        }\n      }\n\n      //If cancel button click\n      if(sweetRespond.isDismissed) {\n        // console.log('cancel button click')\n      }\n    }\n\n    const renderSweetAlert = (item) => {\n      if(item === 'Login') {\n        return sweetAlertLogin()\n      }\n      if(item === 'Sign Up') {\n        return sweetAlertSignUp()\n      }\n      if (item ==='Sign Out') {\n        Auth.logout()\n      }\n    }\n\n\n    return (\n      <div className=\"shadow h-auto\" style={{backgroundColor: \"white\", position: \"absolute\", right: \"0px\", width: \"175px\", paddingTop: \"10px\"}}>\n      <ul className=\"text-center\">\n        {data.map((item, i) => (\n          <li\n            key={i}\n            className={liCls}\n            onClick={() => {\n              setOpen(false)\n              renderSweetAlert(item)\n              handlePageChange(item)\n              }}>\n              <span>\n              {item}\n          </span>\n          </li>\n        ))}\n      </ul>\n    </div>\n    )\n  }\n\n\n\nexport default DropDownCard;\n","import React, { useState, useEffect } from \"react\";\nimport Menu from \"./Menu\";\nimport DropDownCard from \"./dropDownCard\";\nimport Auth from \"../../utils/auth\"\nconst menuData = [\"Login\", \"Sign Up\", \"Characters\", \"My Tama\"];\n\nconst MenuDrop = (props) => {\n  const [open, setOpen] = React.useState(false);\n  const drop = React.useRef(null);\n  const [menuItem, setMenuItem] = useState(menuData)\n\n  useEffect(() => {\n    setMenuItemFunction()\n  }, [])\n\n  const setMenuItemFunction = () => {\n    const userSignOut = [\"Login\", \"Sign Up\", \"Characters\"];\n    const userSignIn = [\"My Tama\", \"Characters\", \"Sign Out\"]\n    if(Auth.loggedIn()) { //user is sign in\n      setMenuItem(userSignIn)\n    } else { //if user is not login\n      setMenuItem(userSignOut)\n    }\n\n\n  }\n  function handleClick(e) {\n\n  }\n  React.useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n    return () => {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  });\n  return (\n    <div\n      className=\"dropdown\"\n      ref={drop}\n      style={{\n        margin: \"16px\",\n        width: \"auto\"\n      }}\n    >\n      <Menu onClick={() => setOpen(open => !open)} />\n      {open && <DropDownCard\n      data={menuItem}\n      setOpen={setOpen}\n      handlePageChange={props.handlePageChange}\n       />}\n    </div>\n  );\n};\n\nexport default MenuDrop;\n","import React, { useState } from \"react\";\n// import Hamburger from 'hamburger-react';\nimport MenuDrop from './MenuDrop';\nimport './header.css';\nimport {Howl, Howler} from 'howler';\n\nfunction Header(props) {\n\n\n  return (\n    <div>\n      <div className=\"header\">\n        <div className='menu'>\n          <MenuDrop handlePageChange={props.handlePageChange}/>\n        </div>\n        <h1 className='header-h1' onClick={() => {\n          props.handlePageChange('HomePage')\n        }}>TAMAGACHA</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/tama1.92caa939.png\";","export default __webpack_public_path__ + \"static/media/tama2.5e78fef5.png\";","export default __webpack_public_path__ + \"static/media/tama3.b0f7f578.png\";","export default __webpack_public_path__ + \"static/media/tama4.f9ef7f88.png\";","export default __webpack_public_path__ + \"static/media/tama5.a825ea6e.png\";","import React from \"react\";\nimport tama1 from '../../assets/tama1.png';\nimport tama2 from '../../assets/tama2.png';\nimport tama3 from '../../assets/tama3.png';\nimport tama4 from '../../assets/tama4.png';\nimport tama5 from '../../assets/tama5.png';\nimport '../Header/Header';\n// import Matching from '../components/Matching'\n\nfunction Homepage() {\n    return (\n        <div>\n            <div className=\"x\">\n                <img className=\"y\" src={tama1} alt=\"tamago\"/>\n            </div>\n            <div className=\"x2\">\n                <img className=\"y2\" src={tama2} alt=\"tamago\"/>\n            </div>\n            <div className=\"x3\">\n                <img className=\"y3\" src={tama3} alt=\"tamago\"/>\n            </div>\n            <div className=\"x4\">\n                <img className=\"y4\" src={tama4} alt=\"tamago\"/>\n            </div>\n            <div className=\"x5\">\n                <img className=\"y5\" src={tama5} alt=\"tamago\"/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Homepage;","import React from \"react\";\nimport './statsdropdown.css'\n\nexport default function Stats ( { userTama }) {\n  let happiness = ['😀', '😐', '😡']\n  let emoji = ''\n  let quote = ''\n\n  //SELECT EMOJI\n  if (userTama.happiness >= 70) {emoji = happiness[0]}\n  else if (userTama.happiness >30 && userTama.happiness <70) {emoji = happiness[1]}\n  else {emoji = happiness[2]}\n\n  //SELECT BASEQUOTE\n  let baseQuote = [\n    \"What are we doing today?\",\n    \"(They're lounging around..)\",\n    \"Welcome back Master..\"\n  ];\n\n  let hungerQuote = [\n    \"Feed me... send bread\",\n    \"I'm hangry!!! arhghhh!\",\n    \"Jerome would have fed me by now.\"\n  ];\n\n  let boredQuote = [\n    \"I'm soooo bored...!\",\n    \"Are we doing anything yet?\",\n    \"(zzz ~dreaming about someone~)\"\n  ];\n\n  let dyingQuote = [\n    \"I'm slowly withering away...\",\n    \"Help me...\",\n    \"(Sad noises)\"\n  ];\n\n  if (userTama.status < 3) {\n    quote = dyingQuote[Math.floor(Math.random() * dyingQuote.length)]\n  } else if (userTama.happiness < 30) {\n    quote = boredQuote[Math.floor(Math.random() * boredQuote.length)]\n  } else if (userTama.hunger <50 ) {\n    quote = hungerQuote[Math.floor(Math.random() * hungerQuote.length)];\n  }\n  else {\n    quote = baseQuote[Math.floor(Math.random() *baseQuote.length)];\n  }\n\n  return (\n    <>\n      {/* <p>\n        <a class=\"btn btn-primary\" data-bs-toggle=\"collapse\" href=\"#tama_stats\" role=\"button\" aria-expanded=\"false\" aria-controls=\"tama_stats\">Show/Hide Stats</a>\n      </p> */}\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"\" id=\"tama_stats\">\n            <div className=\"cardprofile\">\n\n            <h1>{quote}</h1>\n\n              <p>Status 💖 {userTama.status} </p>\n              <p>Happiness {emoji} {userTama.happiness} / 100 </p>\n              <p>Age ⏲️ {Math.round(userTama.age/60)} minutes </p>\n              <p>Fullness 🍛 {userTama.hunger} / 100 </p>\n              <p>Bladder 🧻 {userTama.bladder} / 100 </p>\n              <p>Birthday 🎂 {userTama.date_created.split('T')[0]} </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\n//the original return statement\n// return (\n//   <>\n//     <p>\n//       <a class=\"btn btn-primary\" data-bs-toggle=\"collapse\" href=\"#tama_stats\" role=\"button\" aria-expanded=\"false\" aria-controls=\"tama_stats\">Show/Hide Stats</a>\n//     </p>\n//     <div class=\"row\">\n//       <div class=\"col\">\n//         <div class=\"collapse multi-collapse\" id=\"tama_stats\">\n//           <div class=\"card card-body\">\n//             <p>Status: {userTama.status} 💖 </p>\n//             <p>Fullness: {userTama.hunger} / 100 🍛</p>\n//             <p>Bladder: {userTama.bladder} / 100 🧻</p>\n//             <p>Happiness: {userTama.happiness} / 100 {emoji} </p>\n//             <p>Age: {userTama.age/60} minutes ⏲️ </p>\n//             <p>Birthday: {userTama.date_created.split('T')[0]} 🎂</p>\n//             {/* is alive? is awake? */}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   </>\n// )","export default __webpack_public_path__ + \"static/media/match-game.ecdd3e28.png\";","export default __webpack_public_path__ + \"static/media/ttt-game.78331f2a.png\";","import React, { useState, useEffect } from 'react';\nimport './ttt2.css';\nimport Swal from 'sweetalert2'\nimport Profile from '../Profile/Profile'\n\nimport player1 from '../../assets/tama2.png';\nimport player2 from '../../assets/tama4.png';\n\nconst playerOne = <img src={player1} alt=\"player1\" className='ttt2-inline'/>;\nconst playerTwo = <img src={player2} alt=\"player2\" className='ttt2-inline'/>\n//!!!!!!!!!!!!!!!!! At the end of the game - userWon will either be true/false\nfunction Ttt2 ( {userGameStatus} ) {\n  // const [turn, setTurn] =useState('player')\n  const [boxes, setBoxes] = useState(Array(9).fill(''));\n  // const [gameOver, setGameOver] = useState('false')\n  const [winner, setWinner] = useState(null); //<img src={player1} alt=\"player1\" className='ttt2-inline'/>\n  const [userWon, setUserWon] = useState(false) //if user won - value set to true\n\tconst [gameOver, setGameOver] = useState(false);\n\tconst [backToProfile ,setBackToProfile] = useState(false)\n\tconst [turn, setTurn] = useState('player') //player or computer\n\n\t// useEffect(() => {\n\n  // },[userWon])\n\n\t//check when boxes got updated\n  useEffect(() => {\n\t\tconsole.log('useeffect run on the boxes')\n    winningComb([...boxes])\n\n  },[boxes])\n\n\n\tuseEffect(() => {\n\t\tif(turn === 'computer') {\n\t\t\tsetComputerMove()\n\t\t}\n\n  },[turn])\n\n\t//Check when winner are set - sweetalert\n  useEffect(() => {\n\t\tconsole.log('inside useEffect for winner')\n    if(winner === playerOne) {\n      console.log('playerone won')\n      setUserWon(true)\n\t\t\tuserGameStatus(true) // return true to minigame\n      Swal.fire({\n        title: 'Sweet!',\n        text: 'User Win!!',\n        imageUrl: player1,\n        imageWidth: 300,\n        imageHeight: 200,\n        imageAlt: 'Custom image',\n      })\n    }\n\n    if(winner === playerTwo) {\n      Swal.fire({\n        title: 'Sweet!',\n        text: 'Computer Win!!',\n        imageUrl: player2,\n        imageWidth: 300,\n        imageHeight: 200,\n        imageAlt: 'Custom image',\n      })\n    }\n  },[winner])\n\n  const winningComb = (squares) => {\n\t\tconsole.log('inside winning comb function')\n\t\tvar combos = {\n\t\t\tacross: [\n\t\t\t\t[0, 1, 2],\n\t\t\t\t[3, 4, 5],\n\t\t\t\t[6, 7, 8],\n\t\t\t],\n\t\t\tdown: [\n\t\t\t\t[0, 3, 6],\n\t\t\t\t[1, 4, 7],\n\t\t\t\t[2, 5, 8],\n\t\t\t],\n\t\t\tdiagonal: [\n\t\t\t\t[0, 4, 8],\n\t\t\t\t[2, 4, 6],\n\t\t\t],\n\t\t};\n\n\t\tfor (var combo in combos) {\n\t\t\tcombos[combo].forEach((pattern) => {\n\t\t\t\tif (squares[pattern[0]] === '' || squares[pattern[1]] === '' || squares[pattern[2]] === '') {\n\n\t\t\t\t} else if (squares[pattern[0]] === squares[pattern[1]] && squares[pattern[1]] === squares[pattern[2]]) {\n\t\t\t\t\tsetWinner(squares[pattern[0]]);\n\t\t\t\t\tsetGameOver(true)\n          // setUserWon(true)\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t};\n  \t//check to see which boxes are still open and return a open random box number\n\tconst randomIndex = () => {\n\t\tconsole.log('inside randomIndex function')\n\t\tvar stillOpen = []\n\t\tfor(var i = 0; i < boxes.length; i++) {\n\t\t\tif (boxes[i] === '') {\n\t\t\t\tstillOpen.push(i)\n\t\t\t}\n\t\t}\n\t\tvar randomIndex = Math.floor(Math.random() * stillOpen.length)\n\t\treturn stillOpen[randomIndex]\n\t}\n\n\tconst handleBackButtonClick = () => {\n    setBackToProfile(true)\n  }\n\n\tconst setComputerMove = () => {\n\t\tconsole.log('inside setComputer move function')\n\t\tif(gameOver === false) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif(gameOver === false) {\n\t\t\t\t\t\tsetBoxes(prevState => {\n\t\t\t\t\t\t\tprevState[randomIndex()] = playerTwo;\n\t\t\t\t\t\t\treturn [...prevState]\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t},750)\n\t\t}\n\t\tsetTurn('player')\n\t\t// setTimeout(() => {\n\t\t// \tif(gameOver === false) {\n\t\t// \t\t\tsetBoxes(prevState => {\n\t\t// \t\t\t\tprevState[randomIndex()] = playerTwo;\n\t\t// \t\t\t\treturn [...prevState]\n\t\t// \t\t\t})\n\t\t// \t}\n\t\t// },750)\n\t}\n\n  const handleClick = (num) => {\n\t\tconsole.log('inside handleClick function')\n    if (boxes[num] !== '') {\n      Swal.fire({\n        icon: 'error',\n        title: `oops! Please choose another space!`,\n        timer: 1500\n      })\n\t\t\treturn;\n\t\t}\n\n    setBoxes(prevState => {\n      prevState[num] = playerOne;\n\t\t\t// if(gameOver === false) {\n\t\t\t// \tsetComputerMove()\n\t\t\t// }\n      return [...prevState]\n    })\n    winningComb([...boxes])\n\n\t\tif(gameOver === false) {\n\t\t\t// setComputerMove()\n\t\t\tsetTurn('computer')\n\t\t}\n\n  }\n\n\n  const handleRestart = () => {\n\t\tconsole.log('inside handle restart function')\n\t\tsetWinner(null);\n\t\tsetBoxes(Array(9).fill(''));\n\t\tsetUserWon(false) //if user won - value set to true\n\t\tsetGameOver(false);\n\t};\n  const Cell = ({ num }) => {\n\t\treturn <td onClick={() => handleClick(num)}>{boxes[num]}</td>;\n\t};\n\n\treturn (\n\t\t<>\n\t\t{backToProfile ? <Profile /> : (\n\t\t\t<div className='tttcontainer'>\n\t\t\t<div>\n\t\t\t\t<div className='ttt2-charOne'>{playerOne}<h3 className=\"ttt-toptitle\">You</h3></div>\n\t\t\t\t<div className='ttt2-charTwo'>{playerTwo}<h3 className=\"ttt-toptitle\">Com</h3></div>\n\t\t\t</div>\n\t\t\t<table>\n\t\t\t\t{/* Turn: {turn} */}\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<Cell num={0} />\n\t\t\t\t\t\t<Cell num={1} />\n\t\t\t\t\t\t<Cell num={2} />\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<Cell num={3} />\n\t\t\t\t\t\t<Cell num={4} />\n\t\t\t\t\t\t<Cell num={5} />\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<Cell num={6} />\n\t\t\t\t\t\t<Cell num={7} />\n\t\t\t\t\t\t<Cell num={8} />\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t{winner && (\n\t\t\t\t<>\n\t\t\t\t\t<p className=\"tttwinner\">{winner} is the winner!</p>\n\t\t\t\t\t<button className=\"ttt2playagainbtn\" onClick={() => handleRestart()}>Play Again</button>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{gameOver ? <button className=\"ttt2btn\" onClick={() => handleBackButtonClick()}>Return to Profile</button> : null}\n\t\t</div>\n\t\t)}\n\n\n\t\t</>\n\t);\n}\n\nexport default Ttt2;","export default __webpack_public_path__ + \"static/media/slip.be18d87e.mp3\";","import React, {useState} from 'react'\nimport './card.css'\n\nfunction Card ({ index, name, image, flip, handleOnClick, setUserPick}) {\n  // const [flip, setFlip] = useState(false)\n  const handleImageClick = (e) => {\n    handleOnClick(index, name)\n  }\n\n  return (\n    <div\n      onClick={handleImageClick}\n      className='card m-1 cardmatching'\n      > {flip ? (<img\n        src={image}\n        alt={name}\n        className='matching-card'\n        name={name}\n        index={index}\n        ></img>) : (<img\n      src='./card.png'\n      alt={name}\n      className='matching-card'\n      ></img>)}\n    </div>\n  )\n}\n\nexport default Card;","import React, {useEffect, useState} from 'react';\nimport {Howl} from 'howler';\nimport music from '../../assets/slip.mp3'\nimport './matching.css'\nimport Card from './Card.js'\nimport Profile from '../Profile/Profile'\n\n//Name & pic link\nconst images2 = [\n  {\n    name: 'paintochi',\n    image: 'https://tamagotchi.com/wp-content/uploads/paintochi.jpg',\n    flip: false\n  },\n  {\n    name: 'kuchipatchi',\n    image: 'https://tamagotchi.com/wp-content/uploads/kuchipatchi.jpg',\n    flip: false\n  },\n  {\n    name: 'ginjirotchi',\n    image: 'https://tamagotchi.com/wp-content/uploads/ginjirotchi.jpg',\n    flip: false\n  },\n  {\n    name: 'mimitchi',\n    image: 'https://tamagotchi.com/wp-content/uploads/mimitchi.jpg',\n    flip: false\n  },\n  {\n    name: 'weeptchi',\n    image: 'https://tamagotchi.com/wp-content/uploads/weeptchi.jpg',\n    flip: false\n  },\n  {\n    name: 'sebiretchi',\n    image: 'https://tamagotchi.com/wp-content/uploads/sebiretchi.jpg',\n    flip: false\n  },\n  {\n    name: 'paintochi',\n    image: 'https://tamagotchi.com/wp-content/uploads/paintochi.jpg',\n    flip: false\n  },\n  {\n    name: 'kuchipatchi',\n    image: 'https://tamagotchi.com/wp-content/uploads/kuchipatchi.jpg',\n    flip: false\n  },\n  {\n    name: 'ginjirotchi',\n    image: 'https://tamagotchi.com/wp-content/uploads/ginjirotchi.jpg',\n    flip: false\n  },\n  {\n    name: 'mimitchi',\n    image: 'https://tamagotchi.com/wp-content/uploads/mimitchi.jpg',\n    flip: false\n  },\n  {\n    name: 'weeptchi',\n    image: 'https://tamagotchi.com/wp-content/uploads/weeptchi.jpg',\n    flip: false\n  },\n  {\n    name: 'sebiretchi',\n    image: 'https://tamagotchi.com/wp-content/uploads/sebiretchi.jpg',\n    flip: false\n  },\n]\n\nconst sound = new Howl ({\n  src: [music],\n  volume: 0.2,\n});\n\nfunction Matching( { userGameStatus }) {\n  //!!!!!!!!!!!!!!!!!!!!!!!!!!! When the game is over gamOver will set to true\n  const [randomImageLink, setRandomImageLink] = useState([]);\n  const [userPick, setUserPick] = useState([])\n  const [move, setMove] = useState(0)\n  const [gameOver, setGameOver] = useState(false); //When score === 6 gameOver will set to true.\n  const [score, setScore] = useState(0); // 6 = win\n  const [backToProfile ,setBackToProfile] = useState(false)\n\n  // Only render for the first time\n  useEffect(() => {\n    // console.log('---------only run for the fist time---------')\n    randomCard()\n  },[])\n\n  // watch userPick\n  useEffect(() => {\n  //  console.log('Run when userPick change')\n  //when the userPick state change run the checkBothCard function\n   checkBothCards()\n  },[userPick])\n\n  useEffect(() => {\n    checkGameOver()\n  },[score])\n\n  const checkGameOver = () => {\n    if(score === 6) {\n      setGameOver(true)\n      userGameStatus(true)\n      // randomCard()\n      //random and flip the card back\n\n    }\n  }\n\n  const randomCard = () => {\n    var random = images2.sort(() => Math.random() - 0.5)\n    // console.log('-----randomcard------', random)\n    let temp = random.map(item => {\n      item.flip = false\n      return item\n    })\n    // console.log('------temp----', temp)\n    setRandomImageLink(random)\n  }\n\n  const handleOnClick = (index, name) => {\n    // if image is already open - just return\n    if(randomImageLink[index].flip) {\n      return;\n    }\n\n    //try to use the move state to see if it work\n    if(move < 2 ) {\n      setMove(prev => prev + 1);\n\n      //Set the card open\n      setRandomImageLink(prevState => {\n        prevState[index].flip = !prevState[index].flip\n        return prevState;\n      })\n      if (userPick.length <= 2) {\n        setUserPick(prev => [...prev, {index: index, name:name}])\n      }\n    }\n    else {\n      setMove(0)\n    }\n  }\n\n  const handleBackButtonClick = () => {\n    setBackToProfile(true)\n  }\n\n  //check 2 user pick card\n  const checkBothCards = () => {\n    if(userPick.length > 2 ) {\n      // console.log('userpick length are more then 2')\n      return;\n    }\n    if(userPick.length === 2) {\n      //check to see if both card name are the same\n      if(userPick[0].name === userPick[1].name) {\n        // console.log('user picked the right card')\n        sound.play();\n        setScore(prev => prev += 1)\n        setUserPick([])\n      }\n       else {\n        // close both card\n        setTimeout(() => {\n          console.log('settimeout runnnnnninnnnngggg')\n          setRandomImageLink(prevState => {\n            var index1 = userPick[0].index\n            var index2 = userPick[1].index\n            prevState[index1].flip = false\n            prevState[index2].flip = false\n            return [...prevState]\n          })\n          setUserPick([])\n        },500)\n\n      }\n    }\n  }\n\n  return (\n    <>\n      {backToProfile ? <Profile /> : (\n        <div>\n          <h1 className=\"matchingtitle\">Let's play a matching game!</h1>\n          <div className='container'>\n            <div className='row p-3 m-3'>\n              {randomImageLink.map((item, index) => {\n                return (\n                  <Card\n                  key={index}\n                  item={item}\n                  name={item.name}\n                  image={item.image}\n                  flip={item.flip}\n                  index={index}\n                  handleOnClick={handleOnClick}\n                  setUserPick={setUserPick}\n                  />\n                )\n              })}\n              {gameOver ? \n                <button class=\"matchingbtn\" onClick={() => handleBackButtonClick()}>Return to Profile</button> : null\n              }\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default Matching;\n\n\n","import React, { useState, useEffect } from 'react';\nimport tamaMatch from '../../assets/match-game.png';\nimport tamaTTT from '../../assets/ttt-game.png';\nimport './minigamepage.css';\nimport Ttt2 from '../TTT2/Ttt2'\nimport Matching from '../Matching/Matching'\nimport  { getUserId, getCurrentTama }  from '../../utils/localStorage'\nimport { getUniqueTama, updateTama } from '../../utils/API';\nimport Auth from '../../utils/auth' //gettoken\n\nfunction MinigamePage() {\n    //set page render\n    const [page, setPage] = useState('MiniGame')\n    const [buttonClick, setButtonClick] = useState(false) //When either game got click\n    const [userWin, setUserWin] = useState() //When game play is over userWin will set either true/false\n\n\n    //for tama data\n    const [currentTamaData, setCurrentTamaDate] = useState({})\n\n    //When page first render run the 'getCurrentUserTama()' to get all usertama data\n    useEffect(() => {\n        getCurrentUserTama()\n    },[])\n\n    //Watch to see if the game is over, once is done set the happiness\n    useEffect(() => {\n        const setHappiness = () => {\n            if(userWin) {\n                setCurrentTamaDate(prevState => {\n                    prevState.happiness += 10;\n                    if(prevState.happiness >= 100) {\n                        prevState.happiness = 100;\n                    }\n                    return prevState;\n                })\n            }\n            setUserWin(false);\n        }\n\n        const updateUserTama = async () => {\n            try {\n                let ut_id = getCurrentTama(); // from local\n                let token = Auth.getToken() // from local\n                console.log(\"currentTamaData\", currentTamaData);\n                let response = await updateTama({happiness: currentTamaData.happiness}, token, ut_id)\n                \n    \n                //testing\n                // let response = await updateTama(currentTamaData, token, 1)\n    \n                if (!response.ok) {\n                    throw new Error('Something went wrong!')\n                  };\n                let data = await response.json()\n                console.log(data)  \n                console.log('update sucess')\n            }\n            catch (err) {\n                console.log('error---->', err)\n            }\n        }\n\n        setHappiness()\n        updateUserTama()\n    },[currentTamaData, userWin])\n\n\n    //function to pass down to both game to set 'userWin' state\n     const userGameStatus = (value) => {\n        setUserWin(value)\n    }\n\n    //////////////For render page /////////////\n    //check which game got click\n    const handleOnClick = (page) => {\n        setButtonClick(true)\n        setPage(page)\n    }\n    //render page when user click on either game\n    const renderPageFunction = (page) => {\n        if(page === 'Matching') {\n            return <Matching userGameStatus={userGameStatus}/>\n        } else if (page === 'Ttt2') {\n            return <Ttt2 userGameStatus={userGameStatus}/>\n        } else {\n            //nothing\n        }\n    }\n\n    //get current usertama data and set it to the state 'currentTamaData'\n    const getCurrentUserTama = async () => {\n        try {\n            let ut_id = getCurrentTama(); // from local\n            let token = Auth.getToken() // from local\n\n            let response = await getUniqueTama(ut_id , token)\n            //Testing\n            // let response = await getTama(1,1, token)\n\n\n            if (!response.ok) {\n                throw new Error('Something went wrong!')\n              };\n            let data = await response.json();\n            setCurrentTamaDate(data)\n        }\n        catch (err) {\n            console.log('error--->', err)\n        }\n    }\n\n    return (\n        <>\n        {buttonClick ? renderPageFunction(page) : ( <div className=\"minigame-container\">\n\n        <div className=\"minigame-cardcontainer\">\n             <h2 className=\"minigame-title\">Which minigame would you like to play?</h2>\n\n            <div className=\"minigame-card\">\n                {/* <h3>Matching Game</h3> */}\n                <img\n                    className=\"minigame-card-img\"\n                    src={tamaMatch}\n                    alt=\"Tama Match\"\n                    onClick={() => {\n                        handleOnClick('Matching')\n                    }} />\n            </div>\n\n            <div className=\"minigame-card\">\n                {/* <h3>Tic Tac Toe</h3> */}\n                <img\n                    className=\"minigame-card-img\"\n                    src={tamaTTT}\n                    alt=\"Tama Tic Tac Toe\"\n                    onClick={() => {\n                        handleOnClick('Ttt2')\n                    }} />\n            </div>\n        </div>\n</div>)}\n        </>\n    )\n}\n\nexport default MinigamePage;","import React, {useState, useEffect} from \"react\";\nimport Stats from \"./StatsDropdown\"\nimport tama1 from '../../assets/tama1.png';\nimport tama2 from '../../assets/tama2.png';\nimport tama3 from '../../assets/tama3.png';\nimport tama4 from '../../assets/tama4.png';\nimport tama5 from '../../assets/tama5.png';\nimport './profile.css';\nimport  { getUserId, getCurrentTama }  from '../../utils/localStorage'\nimport { getUser, getTama, updateTama, getUniqueTama } from '../../utils/API';\nimport Auth from '../../utils/auth'\nimport MinigamePage from '../Minigame/Minigamepage'\n\nfunction Profile () {\n  const [stat, setStat] = useState({});\n  const [tama, setTama] = useState({})\n// console.log('stat', stat)\n// console.log('stat', stat.id)\n// console.log('stat', stat.tamas_owned[0])\n  const [pageToRender, setPageToRender] = useState(false)\n\n  const handlePageChange = () => {\n    setPageToRender(true)\n  }\n\n  /**\n   * Stat ===\n   * User: {id, username, email, password, tamas_owned}\n   * tamas_owned: {id, name, description, pictures, userTama}\n   * userTama: {id, age, hunger, happiness, bladder, date_modified, date_created, is_alive, is_awake, status}\n   */\n  const getTamaStats = async (t_id) => {\n    try{\n      const u_id = getUserId();\n      const token = Auth.getToken();\n      const response = await getTama(u_id, t_id, token);\n      console.log ('getTamaStats response: ', response);\n      const data = await response.json();\n      console.log('getTamaStats data: ', data);\n      setTama(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n   const getUserTamaStats = async () => {\n    try {\n      let ut_id = getCurrentTama();\n      let token = Auth.getToken()\n\n      let response = await getUniqueTama(ut_id , token)\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!')\n      };\n\n      let data = await response.json()\n      console.log('data----->', data)\n      setStat(data)\n      getTamaStats(data.tama_id);\n    }\n    catch (err){\n      console.error('errorr--->',err)\n    }\n  }\n\n\n  useEffect(() => {\n      getUserTamaStats()\n  }, [])\n\n  const feedTama = async () => {\n    console.log('hunger stat', stat.hunger)\n    if (stat.hunger >= 100 ) {\n      console.log('nothing happened');\n      return\n    } else {\n      const ut_id = getCurrentTama();\n      const token = Auth.getToken();\n      const newHunger = stat.hunger + 1\n\n      let response = await updateTama({hunger: newHunger}, token, ut_id)\n\n      console.log(response);\n      getUserTamaStats();\n    }\n  }\n\n  const poopTama = async () => {\n    console.log('bladder stat', stat.bladder)\n    if (stat.bladder >= 100 ) {\n      console.log('nothing happened');\n      return\n    } else {\n      const ut_id = getCurrentTama();\n      const token = Auth.getToken();\n      const newBladder = stat.bladder + 1\n\n      let response = await updateTama({bladder: newBladder}, token, ut_id)\n\n      console.log(response);\n      getUserTamaStats();\n    }\n  }\n\n\n  return (\n\n    <>\n    {pageToRender ? <MinigamePage /> : (<tama id=\"profilecssid\">\n        <h2 class=\"profiletamaname\">{tama.name}</h2>\n        <pfp>\n          <img id='tama' src={tama.pictures} alt=''/>\n        </pfp>\n\n        <div className=\"row btnRowprofile {\n\">\n          <button\n          onClick={feedTama}\n          className='feed btnprofile'\n          >Feed</button>\n          <button\n          href='#' //TODO: Navigate to play page\n          className='play btnprofile'\n          onClick={() => handlePageChange()}\n          >Play</button>\n          <button\n          onClick={poopTama}\n          className='poop btnprofile'\n          >Poop</button>\n        </div>\n\n        <div className=\"profilestatsbox\">\n        <div className=\"cardprofile\">\n        {stat.id && <Stats userTama={stat} name={stat.name} />}\n          {/* <Stats userTama={stat.tamas_owned[0].userTama} />\n          <Stats userTama={stat} /> */}\n        </div></div>\n\n      </tama>)}\n\n    </>\n  )\n}\n\nexport default Profile\n\n","import React from \"react\";\nimport tama1 from '../../assets/tama1.png';\nimport tama2 from '../../assets/tama2.png';\nimport tama3 from '../../assets/tama3.png';\nimport tama4 from '../../assets/tama4.png';\nimport tama5 from '../../assets/tama5.png';\nimport './tamadex.css';\n\nfunction Tamadex() {\n    return (\n        <div>\n            <h2>Meet the Tamagacha!</h2>\n            <div className=\"tamadexcontainer\">\n                <div className=\"flip-card\">\n                    <div className=\"flip-card-inner\">\n                        <div className=\"tamadexcard\">\n                            <img\n                                className=\"card-img-top\"\n                                src={tama1}\n                                alt=\"Mametchi\"\n                            />\n                            <div className=\"flip-card-back\">\n                                <h2>Mametchi</h2>\n                                Mametchi is a traffic director. He tries helping Kuchipatchi back up, which leads to him bumping into Orenchi, causing the Tamagachas around him to be stuck in traffic. Rumor has it that he is now seeing someone that likes pink roll cake.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"flip-card\">\n                    <div className=\"flip-card-inner\">\n                        <div className=\"tamadexcard\">\n                            <img\n                                className=\"card-img-top\"\n                                src={tama2}\n                                alt=\"Kuchipatchi\"\n                            />\n                            <div className=\"flip-card-back\">\n                                <h2>Kuchipatchi</h2>\n                                Kuchipatchi has a carefree and gentle nature. He is mild and lazy, but very romantic and a daydreamer. He sometimes cheats if playing games. He has a supersized passion for food, especially Tama-Donuts, and he also loves to take naps.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"flip-card\">\n                    <div className=\"flip-card-inner\">\n                        <div className=\"tamadexcard\">\n                            <img\n                                className=\"card-img-top\"\n                                src={tama3}\n                                alt=\"Violetchi\"\n                            />\n                            <div className=\"flip-card-back\">\n                                <h2>Violetchi</h2>\n                                Violetchi is very knowledgeable about flowers. Gozarutchi happens to fall down next to her when she was reading. She ends up developing a crush on him. She spends the whole day trying to get his attention, but he only seems confused by her weird behavior. She's over him.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"flip-card\">\n                    <div className=\"flip-card-inner\">\n                        <div className=\"tamadexcard\">\n                            <img\n                                className=\"card-img-top\"\n                                src={tama4}\n                                alt=\"Orenchi\"\n                            />\n                            <div className=\"flip-card-back\">\n                                <h2>Orenchi</h2>\n                                Orenchi is a very stylish Tama who loves to have fun. She enjoys daydreaming and dressing up. She is often seeing with pink roll cake. Despite being bright and cheerful, she is sensitive and somewhat defensive of her appearance.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"flip-card\">\n                    <div className=\"flip-card-inner\">\n                        <div className=\"tamadexcard\">\n                            <img\n                                className=\"card-img-top\"\n                                src={tama5}\n                                alt=\"Gozarutchi\"\n                            />\n                            <div className=\"flip-card-back\">\n                                <h2>Gozarutchi</h2>\n                                Gozarutchi hopes to someday be a ninja. However, he is very shy which often gets misunderstood. Gozarutchi also has low blood pressure. Hidden underneath his costume is a picture of someone reading in a garden full of flowers.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n\n        </div>\n    );\n}\n\nexport default Tamadex;","export default __webpack_public_path__ + \"static/media/pop.9a41a671.mp3\";","import React, { useState, useEffect } from 'react';\nimport { Howl } from 'howler';\nimport pop from '../../assets/pop.mp3';\nimport Profile from '../Profile/Profile';\nimport './gacha.css';\n\nconst sound = new Howl({\n  src: [pop],\n  volume: 0.1,\n});\n\nfunction Gacha({handlePageChange}) {\n  // const [page, setPage] = useState('Gacha')\n  // const [buttonClick, setButtonClick] = useState(false)\n\n  // const handleOnClick = (page) => {\n  //   setButtonClick(true)\n  //   setPage(page)\n  // }\n\n  // const renderPageFunction = (page) => {\n  //   if (page === 'Profile') {\n  //     return <Profile />;\n  //   }\n  // }\n\n  return (\n    <>\n\n        <div a href id='egg-container'>\n          <p className='gacha-title'>What will hatch!?</p>\n          <br />\n          <br />\n          <br />\n          <div id='egg' onClick={() => {\n            handlePageChange('Profile')\n          }} />\n\n        </div>\n    </>\n  )\n}\n\nexport default Gacha","import React, { useEffect, useState } from \"react\";\nimport tama1 from '../../assets/tama1.png';\nimport tama2 from '../../assets/tama2.png';\nimport tama3 from '../../assets/tama3.png';\nimport tama4 from '../../assets/tama4.png';\nimport tama5 from '../../assets/tama5.png';\nimport Gacha from \"../gacha_page/gacha\";\nimport Profile from \"../Profile/Profile\";\nimport { getUser, newTama } from \"../../utils/API\";\nimport Auth from '../../utils/auth';\nimport { getUserId, setCurrentTama } from \"../../utils/localStorage\";\nimport './myTama.css';\n\n\nfunction MyTama({handlePageChange}) {\n  // const [page, setPage] = useState('My Tama');\n  const [tamasOwned, setTamaOwned] = useState([]);\n  // const [buttonClick, setButtonClick] = useState(false);\n\n  const getUserData = async () => {\n    try {\n      const user_id = getUserId();\n      const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n      if (!token) {\n        throw new Error(\"Not logged in!\");\n      }\n      console.log(\"token\", token);\n\n      const response = await getUser(user_id, token);\n\n      if (!response.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n      const user = await response.json();\n      console.log(user);\n      setTamaOwned(user.tamas_owned);\n      console.log(\"tamasOwned\", tamasOwned);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getUserData();\n  }, []);\n\n  const gachaPull = async () => {\n      const u_id = getUserId();\n      const token =  Auth.getToken()\n\n      const response = await newTama(u_id, token)\n      if (!response.ok) {\n          return\n      }\n\n      console.log('gacha pull response: ', response)\n      const data = await response.json();\n      console.log('gacha pull data: ', data);\n      if (setCurrentTama(data.id)) {\n          setCurrentTama(data.id)\n      };\n\n  }\n\n  const handleSelectTama = (tama_id) => {\n    setCurrentTama(tama_id);\n    // setButtonClick(true);\n\n  };\n\n  // const handleOnClick = (page) => {\n  //   // setButtonClick(true)\n  //   setPage(page)\n  // }\n\n  // const renderPageFunction = (page) => {\n  //   if(page === 'Gacha'){\n  //       gachaPull()\n\n  //       return <Gacha />\n  //   } else {\n  //     return <Profile />\n  //   }\n  // }\n\n  return (\n    <>\n        <div>\n          <div className=\"mytamapagetitle\">Select your Tama!</div>\n          <div className=\"wrappergachabutton\">\n                  <div className=\"icongachabutton egggachabutton\" onClick={() => {\n                    gachaPull()\n                    handlePageChange('Gacha')\n                  }}>\n                    <div className=\"toolgachabutton\">Get a Tama!</div>\n                    <span>\n                      <i className=\"fas fa-egg\"></i>Gacha!\n                    </span>\n                  </div>\n                </div>\n\n    <div className=\"mytamawrapper\">\n          {tamasOwned.map((tama) => {\n            return (\n              <div key={tama.userTama.id} className=\"mytamacontainer\">\n                {/* <button className=\"mytamagachabutton\"> Get a Tama! </button> */}\n\n                {/* ===END OF TITLE AND GACHA BUTTON=== */}\n\n\n\n                {/* TRIAL BUTTON */}\n\n                {/* === TAMA PER CARD === */}\n                <div className=\"mytamacardcont\">\n                  <div\n                    className=\"mytamamaincard\"\n                    onClick={() => {\n                      handleSelectTama(tama.userTama.id)\n                      handlePageChange('Profile')}\n                    }>\n                    <div>\n                      <button\n                        // onClick={() => handleSelectTama(tama.userTama.id)}\n                        className=\"mytamabutton\"\n                      >\n                        {\" \"}\n                        Select!\n                      </button>\n                    </div>\n\n                    <div className=\"icon\">\n                      <img\n                        className=\"mytamacard-img-top\"\n                        src={tama.pictures}\n                        name=\"tama1\"\n                        alt=\"Mametchi\"\n                      />\n                      <div className=\"mytamatextcont\">\n                        <h5 className=\"title\">{tama.name}</h5>\n                        <p className=\"mytamatext\">\n                          Happiness: {tama.userTama.happiness} <br />\n                          Bladder: {tama.userTama.bladder}  and\n                          Hunger: {tama.userTama.hunger} <br />\n                          Alive: {tama.userTama.is_alive === true ? \"Yes\" : \"REST IN PEACE\"}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n          </div>\n        </div>\n\n    </>\n  );\n}\n\n            export default MyTama;","//! IMPORT REACT\nimport React, {useState} from 'react';\n//* BASE COMPONENTS\nimport Header from './components/Header/Header';\nimport Homepage from './components/Homepage/Homepage';\n// import Hamburger from 'hamburger-react';\n\n//*TAMA RELATED COMPONENTS\nimport Profile from './components/Profile/Profile';\nimport Tamadex from './components/Tamadex/Tamadex';\nimport Gacha from './components/gacha_page/gacha'\nimport MyTama from './components/MyTama/MyTama';\nimport SelectTama from './components/SelectTama/SelectTama'; //! Duplicate of MyTama, import into mytama\n\n//* MINIGAMES\nimport MinigamePage from './components/Minigame/Minigamepage';\nimport Matching from './components/Matching/Matching';\nimport Ttt2 from './components/TTT2/Ttt2';\nimport Ttt from './components/TTT/Ttt'; //! Duplicate of TTT2\n\n//* LocalStorage\nimport { getCurrentTama } from './utils/localStorage'\n\nfunction App() {\n  const [pageToRender, setPageToRender] = useState('HomePage')\n\n  const handlePageChange = page => {\n    setPageToRender(page)\n  }\n\n  const renderPage = () => {\n    if(pageToRender === 'HomePage') {\n      return <Homepage />\n    } else if (pageToRender === 'Login') {\n      // return <Login />\n    } else if (pageToRender === 'Sign Up') {\n      // return sign up sweetalert\n    } else if (pageToRender === 'Characters') {\n      return <Tamadex />\n    } else if (pageToRender === 'My Tama'){\n      return <MyTama handlePageChange={handlePageChange}/>\n    } else if (pageToRender === 'Profile'){\n      return checkIfUserHaveTama()\n    } else if (pageToRender === 'Gacha'){\n      return <Gacha handlePageChange={handlePageChange}/>\n    }\n  }\n\n  //Check to see if User hava a Tama before render the <Profile /> components\n  const checkIfUserHaveTama = () => {\n    if(getCurrentTama()) {\n      return <Profile />\n    } else {\n      return <MyTama handlePageChange={handlePageChange}/>\n    }\n  }\n\n  return (\n    <div>\n      <Header handlePageChange={handlePageChange}/>\n      {/* <Homepage /> */}\n      {renderPage()}\n      {/* <Gacha /> */}\n      {/* <MinigamePage /> */}\n      {/* <MyTama /> */}\n      {/* <Matching /> */}\n      {/* <Tamadex /> */}\n      {/* <Ttt2 /> */}\n      {/* <Ttt /> */}\n      {/* <Matching /> */}\n      {/* <Profile /> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}